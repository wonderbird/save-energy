# *************************** OAuth2 Device Flow  ****************************

# To execute the device flow manually, follow the steps described in the
# section "Using the device flow to generate a user access token" of
# https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-user-access-token-for-a-github-app
#
# 1. POST /login/oauth/device/code
# 2. The user visits the verification_uri and enters the user_code
# 3. POST /login/oauth/access_token
# 4. Use the access_token to authenticate API requests

### POST /login/oauth/device/code
# Request a device and user code for the OAuth2 Device Flow.
#
# Note: Unfortunately, I don't know how to refer to the Client ID configured in
# Secrets.Auth.github. Thus, I am duplicating the Client ID to GitHub.ClientID.
#
POST https://github.com/login/device/code
Content-Type: application/x-www-form-urlencoded
Accept: application/json

client_id = {{GitHub.ClientID}}

> {%
    client.global.set("device_code", response.body.device_code);
%}

### POST /login/oauth/access_token
# Request an access token for the OAuth2 Device Flow.
POST https://github.com/login/oauth/access_token
Content-Type: application/json
Accept: application/json

{
  "client_id": "{{GitHub.ClientID}}",
  "device_code": "{{device_code}}",
  "grant_type": "urn:ietf:params:oauth:grant-type:device_code"
}

> {%
    client.global.set("access_token", response.body.access_token);
    client.global.set("refresh_token", response.body.refresh_token);
%}

### ********************** Read repository information ***********************

### GET /user/repos
# List all repositories for the authenticated user.
#
# Only repositories owned by the authenticated user are listed.
# Get the 1 repository which has been pushed to most recently.
GET https://api.github.com/user/repos?affiliation=owner&sort=pushed&direction=desc&per_page=1&page=1
Accept: application/json
Authorization: Bearer {{access_token}}

### GET /user/repos
# Request a page of repositories that does not exist to find out how GitHub reacts.
#
# Assumption: The user has less than 1000 repositories.
# Get page 11 of repositories when page size is 100.
#
# As of Oct. 30, 2024, the GitHub API returns an empty list of repositories.
#
# See: RepositoryQueryTests.Execute_AvailableRepositoriesIsLargerButNotMultipleOfRequestedPageSize_ReturnsAllRepositories
GET https://api.github.com/user/repos?affiliation=owner&sort=pushed&direction=desc&per_page=100&page=11
Accept: application/json
Authorization: Bearer {{access_token}}

# ************************ Read workflow information *************************

### GET /repos/{owner}/{repo}/actions/workflows
# Lists the workflows in a repository.
GET https://api.github.com/repos/wonderbird/save-energy/actions/workflows
Accept: application/json
Authorization: Bearer {{access_token}}

### GET /repos/{owner}/{repo}/actions/runs
# Lists all workflow runs for a repository.
GET https://api.github.com/repos/wonderbird/save-energy/actions/runs
Accept: application/json
Authorization: Bearer {{access_token}}

### GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing
# Gets the number of billable minutes and total run time for a specific workflow run.
GET https://api.github.com/repos/wonderbird/save-energy/actions/runs/12025439877/timing
Accept: application/json
Authorization: Bearer {{access_token}}

### GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing
# Gets the number of billable minutes used by a specific workflow during the current billing cycle.
GET https://api.github.com/repos/wonderbird/save-energy/actions/workflows/112117966/timing
Accept: application/json
Authorization: Bearer {{access_token}}